swagger: "2.0"
info:
  description: "This is a swagger documentation for youtube-freetime-organizer. For use most routes, you must authenticate"
  version: "1.0.0"
  title: "Swagger youtube-freetime-organizer"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/api/"
tags:
  - name: "Auth"
    description: "Authentication"
schemes:
  - "http"
securityDefinitions:
  auth:
    type: apiKey
    name: Authorization
    in: header
paths:
  /v1/sign-up:
    post:
      tags:
      - "Auth"
      security:
      - auth: []
      summary: "Create user"
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create user and get token"
          required: true
          schema:
            $ref: "#/definitions/SignUp"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserModel"
        400:
          description: "Bad Request"
  /v1/sign-in:
    post:
      tags:
      - "Auth"
      summary: "Authenticate user"
      description: "This for authenticate users."
      operationId: "authUser"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "email"
        description: "User email"
        required: true
        type: string
        format: email
        example: "claudio@example.com"
      - in: "formData"
        name: "password"
        description: "User password"
        required: true
        type: string
        minValue: 8
        example: "123456789"
        format: password
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Token"
        404:
          description: "User not found"
  /v1/users/timesheets:
    post:
      tags:
      - "Timesheets"
      security:
      - auth: []
      summary: "Create timesheet"
      operationId: "createTimesheet"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create a user timesheet"
          required: true
          schema:
            $ref: "#/definitions/TimesheetInput"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TimesheetModel"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
  /v1/users/timesheets/available-videos:
    get:
      tags:
      - "Timesheets"
      security:
      - auth: []
      summary: "get available videos for today"
      operationId: "getAvailableVideos"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AvailableVideos"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
  /v1/users/timesheets/videos/{id}:
    get:
      tags:
      - "Timesheets"
      security:
      - auth: []
      summary: "Set video as watched"
      operationId: "setVideoAsWatched"
      produces:
      - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id that needs to be fetched."
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
 
definitions:
  Auth:
    properties:
      email:
        type: "string"
        example: "test@user.com.br"
      password:
        type: "string"
        example: "test12345"
    type: object
  Token:
    properties:
      jwt:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJkb21haW5faWQiOm51bGwsImlhdCI6MTU1MjUwMDEyNywiZXhwIjoxNTUyNTg2NTI3fQ.euk1Wm0DPsp6CaJMW1WYWkk9n_EQ2ygHbB_IHtCTqBo"
    type: object
  SignUp:
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      auth_provider:
        properties:
          email:
            type: "string"
            example: "test@user.com.br"
          password:
            type: "string"
            example: "test12345"
      type: object
  TimesheetModel:
    properties:
      id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      search_keywords:
        type: "string"
      status:
        type: "string"
        enum: ["IN_PROGRESS", "COMPLETED"]
      total_days_to_complete_timesheet:
        type: "number"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
    type: object
  TimesheetInput:
    properties:
      name:
        type: "string"
        example: "Nodejs studies"
      description:
        type: "string"
        example: "Studies regarding nodejs best practices."
      search_keywords:
        type: "string"
        example: "best practices nodejs"
      available_minutes_per_day:
        type: "array"
        example: [15, 120, 30, 150, 20, 40, 90]
        items:
          type: "number"
        minItems: 7
        maxItems: 7
    required:
      - name
      - search_keywords
      - available_minutes_per_day
    type: object
  TimesheetVideoThumbnails:
    properties:
      id:
        type: "integer"
        format: "int64"
      timesheet_vide_id:
        type: "integer"
        format: "int64"
      image_quality_type:
        type: "string"
      url:
        type: "string"
      width:
        type: "number"
      height:
        type: "number"
      createdAt:
        type: "string"
      updatedAt:
        type: "string"
      deletedAt:
        type: "string"
    type: object
  TimesheetVideos:
    properties:
      id:
        type: "integer"
        format: "int64"
      timesheet_id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      duration:
        type: "number"
      youtube_video_id_key:
        type: "string"
      total_days_to_complete_timesheet:
        type: "number"
      createdAt:
        type: "string"
      updatedAt:
        type: "string"
      deletedAt:
        type: "string"
      watchedAt:
        type: "string"
      timesheet_video_thumbnails:
        type: "array"
        items:
          $ref: "#/definitions/TimesheetVideoThumbnails"
    type: object
  AvailableVideos:
    properties:
      id:
        type: "integer"
        format: "int64"
      timesheet_id:
        type: "integer"
        format: "int64"
      day_of_week:
        type: "string"
        enum: ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
      available_minutes:
        type: "number"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
      timesheet_videos:
        type: "array"
        items:
          $ref: "#/definitions/TimesheetVideos"
    type: object
  User:
    properties:
      id:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
      last_name:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
    type: object
  UserModel:
    properties:
      id:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
      last_name:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
    type: object
